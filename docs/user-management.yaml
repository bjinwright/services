openapi: 3.0.0
info:
  title: User Management Service
  version: 1.0.0
paths:
  /users/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input. Username must be at least 3 characters.
        '409':
          description: User already exists
  /users/login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in successfully
        '400':
          description: Invalid input. Username and password are required.
        '401':
          description: Invalid username or password
  /users/logout:
    post:
      summary: Logout a user
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
      responses:
        '200':
          description: User logged out successfully
        '401':
          description: Unauthorized
  /users/profile:
    get:
      summary: Get user profile
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
    put:
      summary: Update user profile
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User profile updated successfully
        '400':
          description: Invalid input. Email is required.
        '401':
          description: Unauthorized
  /users/delete:
    delete:
      summary: Delete a user
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
      responses:
        '200':
          description: User deleted successfully
        '401':
          description: Unauthorized
  /users/reset-password:
    post:
      summary: Reset user password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Password reset email sent successfully
        '400':
          description: Invalid input. Email is required.
        '404':
          description: User not found
  /users/verify-email:
    post:
      summary: Verify user email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Email verified successfully
        '400':
          description: Invalid input. Verification token is required.
        '404':
          description: Verification token not found
  /users/list:
    get:
      summary: Get a list of users
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: false
        - in: query
          name: limit
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
  /users/{userId}:
    get:
      summary: Get user profile by ID
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
components:
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - BearerAuth: []
